%!PS-Adobe-3.0
%%BoundingBox: 24 24 571 818
%%Title: Enscript Output
%%For: TJ Yang
%%Creator: GNU Enscript 1.6.6
%%CreationDate: Sun Feb  4 09:54:54 2024
%%Orientation: Portrait
%%Pages: (atend)
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset Enscript-Prolog 1.6 6
%
% Procedures.
%

/_S {	% save current state
  /_s save def
} def
/_R {	% restore from saved state
  _s restore
} def

/S {	% showpage protecting gstate
  gsave
  showpage
  grestore
} bind def

/MF {	% fontname newfontname -> -	make a new encoded font
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  % insert only valid encoding vectors
  encoding_vector length 256 eq {
    newfont /Encoding encoding_vector put
  } if

  newfontname newfont definefont pop
} def

/MF_PS { % fontname newfontname -> -	make a new font preserving its enc
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  newfontname newfont definefont pop
} def

/SF { % fontname width height -> -	set a new font
  /height exch def
  /width exch def

  findfont
  [width 0 0 height 0 0] makefont setfont
} def

/SUF { % fontname width height -> -	set a new user font
  /height exch def
  /width exch def

  /F-gs-user-font MF
  /F-gs-user-font width height SF
} def

/SUF_PS { % fontname width height -> -	set a new user font preserving its enc
  /height exch def
  /width exch def

  /F-gs-user-font MF_PS
  /F-gs-user-font width height SF
} def

/M {moveto} bind def
/s {show} bind def

/Box {	% x y w h -> -			define box path
  /d_h exch def /d_w exch def /d_y exch def /d_x exch def
  d_x d_y  moveto
  d_w 0 rlineto
  0 d_h rlineto
  d_w neg 0 rlineto
  closepath
} def

/bgs {	% x y height blskip gray str -> -	show string with bg color
  /str exch def
  /gray exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    gray setgray
    fill
  grestore
  x y M str s
} def

/bgcs { % x y height blskip red green blue str -> -  show string with bg color
  /str exch def
  /blue exch def
  /green exch def
  /red exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    red green blue setrgbcolor
    fill
  grestore
  x y M str s
} def

% Highlight bars.
/highlight_bars {	% nlines lineheight output_y_margin gray -> -
  gsave
    setgray
    /ymarg exch def
    /lineheight exch def
    /nlines exch def

    % This 2 is just a magic number to sync highlight lines to text.
    0 d_header_y ymarg sub 2 sub translate

    /cw d_output_w cols div def
    /nrows d_output_h ymarg 2 mul sub lineheight div cvi def

    % for each column
    0 1 cols 1 sub {
      cw mul /xp exch def

      % for each rows
      0 1 nrows 1 sub {
        /rn exch def
        rn lineheight mul neg /yp exch def
        rn nlines idiv 2 mod 0 eq {
	  % Draw highlight bar.  4 is just a magic indentation.
	  xp 4 add yp cw 8 sub lineheight neg Box fill
	} if
      } for
    } for

  grestore
} def

% Line highlight bar.
/line_highlight {	% x y width height gray -> -
  gsave
    /gray exch def
    Box gray setgray fill
  grestore
} def

% Column separator lines.
/column_lines {
  gsave
    .1 setlinewidth
    0 d_footer_h translate
    /cw d_output_w cols div def
    1 1 cols 1 sub {
      cw mul 0 moveto
      0 d_output_h rlineto stroke
    } for
  grestore
} def

% Column borders.
/column_borders {
  gsave
    .1 setlinewidth
    0 d_footer_h moveto
    0 d_output_h rlineto
    d_output_w 0 rlineto
    0 d_output_h neg rlineto
    closepath stroke
  grestore
} def

% Do the actual underlay drawing
/draw_underlay {
  ul_style 0 eq {
    ul_str true charpath stroke
  } {
    ul_str show
  } ifelse
} def

% Underlay
/underlay {	% - -> -
  gsave
    0 d_page_h translate
    d_page_h neg d_page_w atan rotate

    ul_gray setgray
    ul_font setfont
    /dw d_page_h dup mul d_page_w dup mul add sqrt def
    ul_str stringwidth pop dw exch sub 2 div ul_h_ptsize -2 div moveto
    draw_underlay
  grestore
} def

/user_underlay {	% - -> -
  gsave
    ul_x ul_y translate
    ul_angle rotate
    ul_gray setgray
    ul_font setfont
    0 0 ul_h_ptsize 2 div sub moveto
    draw_underlay
  grestore
} def

% Page prefeed
/page_prefeed {		% bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} def

% Wrapped line markers
/wrapped_line_mark {	% x y charwith charheight type -> -
  /type exch def
  /h exch def
  /w exch def
  /y exch def
  /x exch def

  type 2 eq {
    % Black boxes (like TeX does)
    gsave
      0 setlinewidth
      x w 4 div add y M
      0 h rlineto w 2 div 0 rlineto 0 h neg rlineto
      closepath fill
    grestore
  } {
    type 3 eq {
      % Small arrows
      gsave
        .2 setlinewidth
        x w 2 div add y h 2 div add M
        w 4 div 0 rlineto
        x w 4 div add y lineto stroke

        x w 4 div add w 8 div add y h 4 div add M
        x w 4 div add y lineto
	w 4 div h 8 div rlineto stroke
      grestore
    } {
      % do nothing
    } ifelse
  } ifelse
} def

% EPSF import.

/BeginEPSF {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack
  userdict begin
  /showpage { } def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where {
    pop languagelevel
    1 ne {
      false setstrokeadjust false setoverprint
    } if
  } if
} bind def

/EndEPSF {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse
%%EndResource
%%BeginResource: procset Enscript-Encoding-88591 1.6 6
/encoding_vector [
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclam       	/quotedbl     	/numbersign   	
/dollar       	/percent      	/ampersand    	/quoteright   	
/parenleft    	/parenright   	/asterisk     	/plus         	
/comma        	/hyphen       	/period       	/slash        	
/zero         	/one          	/two          	/three        	
/four         	/five         	/six          	/seven        	
/eight        	/nine         	/colon        	/semicolon    	
/less         	/equal        	/greater      	/question     	
/at           	/A            	/B            	/C            	
/D            	/E            	/F            	/G            	
/H            	/I            	/J            	/K            	
/L            	/M            	/N            	/O            	
/P            	/Q            	/R            	/S            	
/T            	/U            	/V            	/W            	
/X            	/Y            	/Z            	/bracketleft  	
/backslash    	/bracketright 	/asciicircum  	/underscore   	
/quoteleft    	/a            	/b            	/c            	
/d            	/e            	/f            	/g            	
/h            	/i            	/j            	/k            	
/l            	/m            	/n            	/o            	
/p            	/q            	/r            	/s            	
/t            	/u            	/v            	/w            	
/x            	/y            	/z            	/braceleft    	
/bar          	/braceright   	/tilde        	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclamdown   	/cent         	/sterling     	
/currency     	/yen          	/brokenbar    	/section      	
/dieresis     	/copyright    	/ordfeminine  	/guillemotleft	
/logicalnot   	/hyphen       	/registered   	/macron       	
/degree       	/plusminus    	/twosuperior  	/threesuperior	
/acute        	/mu           	/paragraph    	/bullet       	
/cedilla      	/onesuperior  	/ordmasculine 	/guillemotright	
/onequarter   	/onehalf      	/threequarters	/questiondown 	
/Agrave       	/Aacute       	/Acircumflex  	/Atilde       	
/Adieresis    	/Aring        	/AE           	/Ccedilla     	
/Egrave       	/Eacute       	/Ecircumflex  	/Edieresis    	
/Igrave       	/Iacute       	/Icircumflex  	/Idieresis    	
/Eth          	/Ntilde       	/Ograve       	/Oacute       	
/Ocircumflex  	/Otilde       	/Odieresis    	/multiply     	
/Oslash       	/Ugrave       	/Uacute       	/Ucircumflex  	
/Udieresis    	/Yacute       	/Thorn        	/germandbls   	
/agrave       	/aacute       	/acircumflex  	/atilde       	
/adieresis    	/aring        	/ae           	/ccedilla     	
/egrave       	/eacute       	/ecircumflex  	/edieresis    	
/igrave       	/iacute       	/icircumflex  	/idieresis    	
/eth          	/ntilde       	/ograve       	/oacute       	
/ocircumflex  	/otilde       	/odieresis    	/divide       	
/oslash       	/ugrave       	/uacute       	/ucircumflex  	
/udieresis    	/yacute       	/thorn        	/ydieresis    	
] def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Courier
/HFpt_w 10 def
/HFpt_h 10 def
/Courier-Bold /HF-gs-font MF
/HF /HF-gs-font findfont [HFpt_w 0 0 HFpt_h 0 0] makefont def
/Courier /F-gs-font MF
/F-gs-font 8 8 SF
/#copies 1 def
% Pagedevice definitions:
gs_languagelevel 1 gt {
  <<
    /PageSize [595 842] 
  >> setpagedevice
} if
%%BeginResource: procset Enscript-Header-simple 1.6 6

/do_header {	% print default simple header
  gsave
    d_header_x d_header_y HFpt_h 3 div add translate

    HF setfont
    user_header_p {
      5 0 moveto user_header_left_str show

      d_header_w user_header_center_str stringwidth pop sub 2 div
      0 moveto user_header_center_str show

      d_header_w user_header_right_str stringwidth pop sub 5 sub
      0 moveto user_header_right_str show
    } {
      5 0 moveto fname show
      45 0 rmoveto fmodstr show
      45 0 rmoveto pagenumstr show
    } ifelse

  grestore
} def
%%EndResource
/d_page_w 547 def
/d_page_h 794 def
/d_header_x 0 def
/d_header_y 779 def
/d_header_w 547 def
/d_header_h 15 def
/d_footer_x 0 def
/d_footer_y 0 def
/d_footer_w 547 def
/d_footer_h 0 def
/d_output_w 547 def
/d_output_h 779 def
/cols 1 def
%%EndSetup
%%Page: (1) 1
%%BeginPageSetup
_S
24 24 translate
/pagenum 1 def
/fname (Makefile) def
/fdir (.) def
/ftail (Makefile) def
% User defined strings:
/fmodstr (Sun Feb 04 09:54:48 2024) def
/pagenumstr (1) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
1 9.000000 2 8.000000 highlight_bars
do_header
/Courier-Oblique 8 8 SUF
5 768 M
(# Makefile front-end for rust dev works.) s
/F-gs-font 8 8 SF
5 759 M
(VERSION         = 1.0) s
5 750 M
(RELEASE         = 2) s
5 741 M
(DATE            = $\(shell date\)) s
5 732 M
(NEWRELEASE      = $\(shell ) s
/Courier-Bold 8 8 SUF
129.8 732 M
(echo) s
/F-gs-font 8 8 SF
149 732 M
( $$\(\($\(RELEASE\) + 1\)\)\)) s
5 723 M
(PROJECT_NAME    = hellocrud) s
5 714 M
(TOPDIR = $\(shell ) s
/Courier-Bold 8 8 SUF
86.6 714 M
(pwd) s
/F-gs-font 8 8 SF
101 714 M
(\)) s
5 705 M
(MANPAGES =) s
5 696 M
(MACPATH=/usr/) s
/Courier-Bold 8 8 SUF
67.4 696 M
(local) s
/F-gs-font 8 8 SF
91.4 696 M
(/bin) s
5 687 M
(A2PS2S1C  = ${MACPATH}/enscript -H1 --highlight-bar-gray=08 -fCourier8 -Ebash  --non-printable-format=space) s
5 678 M
(A2PSTMP   = ./tmp) s
5 669 M
(DOCS      = ./docs) s
5 651 M
(SHELL := /bin/bash) s
5 633 M
(.PHONY: all commit tests examples pdf doc docs sqld cmkrest cmd-demo cmk-agent-ctl cmkc) s
5 615 M
(all: ) s
/Courier-Bold 8 8 SUF
29 615 M
(help) s
/F-gs-font 8 8 SF
/Courier-Oblique 8 8 SUF
5 606 M
(#https://stackoverflow.com/questions/6273608/how-to-pass-argument-to-makefile-from-command-line) s
/F-gs-font 8 8 SF
5 597 M
(args = `arg=) s
/Courier-Bold 8 8 SUF
62.6 597 M
("$\(filter-out $@,$\(MAKECMDGOALS\)\)") s
/F-gs-font 8 8 SF
225.8 597 M
( && ) s
/Courier-Bold 8 8 SUF
245 597 M
(echo) s
/F-gs-font 8 8 SF
264.2 597 M
( $${arg:-${1}}`) s
5 588 M
(%:) s
5 579 M
(        @:) s
5 561 M
(versionfile:) s
5 552 M
(        ) s
/Courier-Bold 8 8 SUF
43.4 552 M
(echo) s
/F-gs-font 8 8 SF
62.6 552 M
( ) s
/Courier-Bold 8 8 SUF
67.4 552 M
("version:") s
/F-gs-font 8 8 SF
115.4 552 M
( $\(VERSION\) > etc/version) s
5 543 M
(        ) s
/Courier-Bold 8 8 SUF
43.4 543 M
(echo) s
/F-gs-font 8 8 SF
62.6 543 M
( ) s
/Courier-Bold 8 8 SUF
67.4 543 M
("release:") s
/F-gs-font 8 8 SF
115.4 543 M
( $\(RELEASE\) >> etc/version) s
5 534 M
(        ) s
/Courier-Bold 8 8 SUF
43.4 534 M
(echo) s
/F-gs-font 8 8 SF
62.6 534 M
( ) s
/Courier-Bold 8 8 SUF
67.4 534 M
("source build date:") s
/F-gs-font 8 8 SF
163.4 534 M
( $\(DATE\) >> etc/version) s
5 516 M
(manpage:) s
5 507 M
(        ) s
/Courier-Bold 8 8 SUF
43.4 507 M
(for) s
/F-gs-font 8 8 SF
57.8 507 M
( manpage ) s
/Courier-Bold 8 8 SUF
101 507 M
(in) s
/F-gs-font 8 8 SF
110.6 507 M
( $\(MANPAGES\); ) s
/Courier-Bold 8 8 SUF
177.8 507 M
(do) s
/F-gs-font 8 8 SF
187.4 507 M
( \(pod2man --center=$$manpage --release=) s
/Courier-Bold 8 8 SUF
374.6 507 M
("") s
/F-gs-font 8 8 SF
384.2 507 M
( ./docs/$$manpage.pod > ./docs/$) s
5 498 M
($manpage.1\); ) s
/Courier-Bold 8 8 SUF
67.4 498 M
(done) s
/F-gs-font 8 8 SF
5 480 M
(clean: cleantmp) s
5 471 M
(        -rm -rf *~ ) s
5 462 M
(        -rm -rf docs/*.1) s
5 453 M
(        -find . -) s
/Courier-Bold 8 8 SUF
86.6 453 M
(type) s
/F-gs-font 8 8 SF
105.8 453 M
( f -name *~   -) s
/Courier-Bold 8 8 SUF
177.8 453 M
(exec) s
/F-gs-font 8 8 SF
197 453 M
( rm -f {} \\;) s
5 444 M
(        -find . -) s
/Courier-Bold 8 8 SUF
86.6 444 M
(type) s
/F-gs-font 8 8 SF
105.8 444 M
( f -name *.ps  -) s
/Courier-Bold 8 8 SUF
182.6 444 M
(exec) s
/F-gs-font 8 8 SF
201.8 444 M
( rm -f {} \\;) s
5 435 M
(        -find . -) s
/Courier-Bold 8 8 SUF
86.6 435 M
(type) s
/F-gs-font 8 8 SF
105.8 435 M
( d -name target  -) s
/Courier-Bold 8 8 SUF
192.2 435 M
(exec) s
/F-gs-font 8 8 SF
211.4 435 M
( rm -rf {} \\;) s
5 417 M
(clean_hard:) s
5 408 M
(        -rm -rf $\(shell $\(PYTHON\) -c ) s
/Courier-Bold 8 8 SUF
182.6 408 M
("from distutils.sysconfig import get_python_lib; print get_python_lib\(\)") s
/F-gs-font 8 8 SF
528.2 408 M
(\)/) s
5 399 M
(adagios ) s
5 381 M
(clean_hardest: clean_rpms) s
/Courier-Oblique 8 8 SUF
5 354 M
(#Ref: https://stackoverflow.com/questions/1490949/how-to-write-loop-in-a-makefile) s
/F-gs-font 8 8 SF
/Courier-Oblique 8 8 SUF
5 345 M
(# Adding *.rs need to be conveted into pdf) s
/F-gs-font 8 8 SF
5 336 M
(SRC1= README.md Makefile Cargo.toml hellocrud-dir-layout.txt) s
5 327 M
(SRC2= src/classes.rs src/functions.rs src/hello.rs src/main.rs src/) s
/Courier-Bold 8 8 SUF
326.6 327 M
(test) s
/F-gs-font 8 8 SF
345.8 327 M
(.rs) s
5 318 M
(SRC3= ) s
5 300 M
(pdfdir:) s
5 291 M
(        mkdir -p ${A2PSTMP}/src $\(DOCS\)/src) s
5 282 M
(cleantmp:) s
5 273 M
(        rm -f ${A2PSTMP}/*.ps ${A2PSTMP}/*.pdf  ) s
5 264 M
(.ps: cleantmp) s
5 255 M
(        $\(foreach var, $\(SRC1\), ${A2PS2S1C}  --output=${A2PSTMP}/$\(var\).ps $\(var\) ;\)) s
5 246 M
(        $\(foreach var, $\(SRC2\), ${A2PS2S1C}  --output=${A2PSTMP}/$\(var\).ps $\(var\) ;\)) s
5 237 M
(        $\(foreach var, $\(SRC3\), ${A2PS2S1C}  --output=${A2PSTMP}/$\(var\).ps $\(var\) ;\)) s
5 228 M
(        touch .ps) s
/Courier-Oblique 8 8 SUF
5 219 M
(# No VM needed since MacOS is Unix based.) s
/F-gs-font 8 8 SF
5 210 M
(macpdf: .pdf) s
5 201 M
(        touch .pdf) s
5 192 M
(        rm -f ${DOCS\)}/*.pdf) s
5 183 M
(        find  ${A2PSTMP}/ -) s
/Courier-Bold 8 8 SUF
134.6 183 M
(type) s
/F-gs-font 8 8 SF
153.8 183 M
( f -name *.pdf -) s
/Courier-Bold 8 8 SUF
230.6 183 M
(exec) s
/F-gs-font 8 8 SF
249.8 183 M
( cp {}  ${DOCS}/  \\;) s
5 174 M
(        ls -lrt  ${DOCS}/*.pdf) s
5 156 M
(allpdf: .pdf) s
5 147 M
(        touch .pdf) s
5 138 M
(        rm -f ${A2PSTMP}/*.pdf) s
5 129 M
(        find  docs  -) s
/Courier-Bold 8 8 SUF
105.8 129 M
(type) s
/F-gs-font 8 8 SF
125 129 M
( f -name *.pdf -) s
/Courier-Bold 8 8 SUF
201.8 129 M
(exec) s
/F-gs-font 8 8 SF
221 129 M
( cp {}  ${A2PSTMP}/  \\;) s
5 120 M
(        rm -f /mnt/hgfs/vmware/*.pdf) s
5 111 M
(        cp -f ${A2PSTMP}/*.pdf  /mnt/hgfs/vmware/) s
5 102 M
(        ls -lrt  /mnt/hgfs/vmware/*.pdf) s
5 75 M
(pdf: .pdf) s
5 66 M
(        touch .pdf) s
5 57 M
(.pdf: .ps) s
5 48 M
(        $\(foreach var, $\(SRC1\), \() s
/Courier-Bold 8 8 SUF
163.4 48 M
(cd) s
/F-gs-font 8 8 SF
173 48 M
( ${A2PSTMP};ps2pdf $\(var\).ps $\(var\).pdf\);\)) s
5 39 M
(        $\(foreach var, $\(SRC2\), \() s
/Courier-Bold 8 8 SUF
163.4 39 M
(cd) s
/F-gs-font 8 8 SF
173 39 M
( ${A2PSTMP};ps2pdf $\(var\).ps $\(var\).pdf\);\)) s
5 30 M
(        $\(foreach var, $\(SRC3\), \() s
/Courier-Bold 8 8 SUF
163.4 30 M
(cd) s
/F-gs-font 8 8 SF
173 30 M
( ${A2PSTMP};ps2pdf $\(var\).ps $\(var\).pdf\);\)) s
5 21 M
(        rsync -azpv ${A2PSTMP}/*    ${DOCS}/) s
5 12 M
(        find ${DOCS}/src/ -) s
/Courier-Bold 8 8 SUF
134.6 12 M
(type) s
/F-gs-font 8 8 SF
153.8 12 M
( f -name ) s
/Courier-Bold 8 8 SUF
197 12 M
("*.ps") s
/F-gs-font 8 8 SF
225.8 12 M
( -) s
/Courier-Bold 8 8 SUF
235.4 12 M
(exec) s
/F-gs-font 8 8 SF
254.6 12 M
( rm -f {} \\;) s
5 3 M
(        touch .pdf) s
_R
S
%%Page: (2) 2
%%BeginPageSetup
_S
24 24 translate
/pagenum 2 def
/fname (Makefile) def
/fdir (.) def
/ftail (Makefile) def
% User defined strings:
/fmodstr (Sun Feb 04 09:54:48 2024) def
/pagenumstr (2) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
1 9.000000 2 8.000000 highlight_bars
do_header
5 768 M
(tree: clean) s
5 759 M
(        tree -L 4 > ${PROJECT_NAME}-dir-layout.txt) s
5 741 M
(.PHONY: tests test2) s
5 732 M
(tests:) s
5 723 M
(        \() s
/Courier-Bold 8 8 SUF
48.2 723 M
(cd) s
/F-gs-font 8 8 SF
57.8 723 M
( hello && cargo ) s
/Courier-Bold 8 8 SUF
134.6 723 M
(test) s
/F-gs-font 8 8 SF
153.8 723 M
(\)) s
/Courier-Oblique 8 8 SUF
5 705 M
(# enable makefile to accept argument after command) s
/F-gs-font 8 8 SF
/Courier-Oblique 8 8 SUF
5 696 M
(#https://stackoverflow.com/questions/6273608/how-to-pass-argument-to-makefile-from-command-line) s
/F-gs-font 8 8 SF
5 678 M
(args = `arg=) s
/Courier-Bold 8 8 SUF
62.6 678 M
("$\(filter-out $@,$\(MAKECMDGOALS\)\)") s
/F-gs-font 8 8 SF
225.8 678 M
( && ) s
/Courier-Bold 8 8 SUF
245 678 M
(echo) s
/F-gs-font 8 8 SF
264.2 678 M
( $${arg:-${1}}`) s
5 669 M
(%:) s
5 660 M
(        @:) s
5 642 M
(status:) s
5 633 M
(        git status) s
5 624 M
(commit:) s
5 615 M
(        git commit -am ) s
/Courier-Bold 8 8 SUF
115.4 615 M
("$\(call args, Automated commit message without details, Please read the git diff\)") s
/F-gs-font 8 8 SF
509 615 M
(  && g) s
5 606 M
(it push) s
5 597 M
(pull:) s
5 588 M
(        git pull) s
5 579 M
(install:) s
5 570 M
(        cargo install  --force --path .) s
5 561 M
(        ls -lrt ${) s
/Courier-Bold 8 8 SUF
91.4 561 M
(HOME) s
/F-gs-font 8 8 SF
110.6 561 M
(}/.cargo/bin) s
5 543 M
(cmk-agent-ctl:) s
5 534 M
(        \() s
/Courier-Bold 8 8 SUF
48.2 534 M
(cd) s
/F-gs-font 8 8 SF
57.8 534 M
( cmk-agent-ctl && cargo install  --force --path . \)) s
5 525 M
(cmd-demo:) s
5 516 M
(        \() s
/Courier-Bold 8 8 SUF
48.2 516 M
(cd) s
/F-gs-font 8 8 SF
57.8 516 M
( cmd-demo && ./cmd-install.sh\)) s
5 498 M
(cmkc:) s
5 489 M
(        \() s
/Courier-Bold 8 8 SUF
48.2 489 M
(cd) s
/F-gs-font 8 8 SF
57.8 489 M
( cmkc && cargo install  --force --path . \)) s
5 471 M
(cmkrest:) s
5 462 M
(        \() s
/Courier-Bold 8 8 SUF
48.2 462 M
(cd) s
/F-gs-font 8 8 SF
57.8 462 M
( cmkrest &&  cargo install  --force --path .\)) s
5 444 M
(install2:) s
/Courier-Oblique 8 8 SUF
5 435 M
(#       cd sqld/sqlc    && cargo install  --force --path .) s
/F-gs-font 8 8 SF
/Courier-Oblique 8 8 SUF
5 426 M
(#       cd sqld/sqlc    && cargo install  --force --path .) s
/F-gs-font 8 8 SF
5 417 M
(        ls -lrt ${) s
/Courier-Bold 8 8 SUF
91.4 417 M
(HOME) s
/F-gs-font 8 8 SF
110.6 417 M
(}/.cargo/bin) s
5 399 M
(installcmk:) s
5 390 M
(        ) s
/Courier-Bold 8 8 SUF
43.4 390 M
(cd) s
/F-gs-font 8 8 SF
53 390 M
( cmk    && cargo install  --force --path .) s
5 381 M
(        ls -lrt ${) s
/Courier-Bold 8 8 SUF
91.4 381 M
(HOME) s
/F-gs-font 8 8 SF
110.6 381 M
(}/.cargo/bin | tail -10) s
5 363 M
(installsqld:) s
5 354 M
(        ) s
/Courier-Bold 8 8 SUF
43.4 354 M
(cd) s
/F-gs-font 8 8 SF
53 354 M
( sqld   && make install ) s
5 345 M
(        ls -lrt ${) s
/Courier-Bold 8 8 SUF
91.4 345 M
(HOME) s
/F-gs-font 8 8 SF
110.6 345 M
(}/.cargo/bin | tail -10) s
5 318 M
(clip:) s
5 309 M
(        cargo clippy) s
5 300 M
(build:) s
5 291 M
(        cargo build &&  find target/debug  -maxdepth 1 -) s
/Courier-Bold 8 8 SUF
273.8 291 M
(type) s
/F-gs-font 8 8 SF
293 291 M
( f -perm /755 | egrep -v ) s
/Courier-Bold 8 8 SUF
413 291 M
("\\.d") s
/F-gs-font 8 8 SF
5 282 M
(sqld:) s
5 273 M
(        ) s
/Courier-Bold 8 8 SUF
43.4 273 M
(cd) s
/F-gs-font 8 8 SF
53 273 M
( sqld && cargo build && find target/debug  -maxdepth 1 -) s
/Courier-Bold 8 8 SUF
321.8 273 M
(type) s
/F-gs-font 8 8 SF
341 273 M
( f -perm /755 | egrep -v ) s
/Courier-Bold 8 8 SUF
461 273 M
("\\.d") s
/F-gs-font 8 8 SF
5 264 M
(        ) s
/Courier-Bold 8 8 SUF
43.4 264 M
(cd) s
/F-gs-font 8 8 SF
53 264 M
( sqld && cp -p target/debug/sqld target/debug/bottomless-cli ${) s
/Courier-Bold 8 8 SUF
355.4 264 M
(HOME) s
/F-gs-font 8 8 SF
374.6 264 M
(}/.cargo/bin) s
5 255 M
(        ls -lrt ${) s
/Courier-Bold 8 8 SUF
91.4 255 M
(HOME) s
/F-gs-font 8 8 SF
110.6 255 M
(}/.cargo/bin) s
5 246 M
(format:) s
5 237 M
(        cargo fmt -v) s
5 219 M
(examples:) s
5 210 M
(        cargo build --examples && ls -lrt target/debug/examples/ |egrep -v ) s
/Courier-Bold 8 8 SUF
365 210 M
("\\.d") s
/F-gs-font 8 8 SF
5 201 M
(doc:) s
5 192 M
(        rustdoc README.md --crate-name docs) s
5 183 M
(        cargo doc) s
5 174 M
(        ls target/doc doc) s
/Courier-Oblique 8 8 SUF
5 165 M
(#       rustdoc src/bin/cmdbc.rs  --crate-name docs) s
/F-gs-font 8 8 SF
5 147 M
(saas_pg:) s
5 138 M
(        LOCO_APP_NAME=saas_pg LOCO_TEMPLATE=saas loco new -p ./) s
5 120 M
(lightweight_service:) s
5 111 M
(        LOCO_APP_NAME=lightweight_service LOCO_TEMPLATE=lightweight-service loco new ) s
/Courier-Bold 8 8 SUF
5 84 M
(help) s
/F-gs-font 8 8 SF
24.2 84 M
(:) s
5 75 M
(        @) s
/Courier-Bold 8 8 SUF
48.2 75 M
(echo) s
/F-gs-font 8 8 SF
67.4 75 M
( ) s
/Courier-Bold 8 8 SUF
72.2 75 M
("Usage: make <target> <argument>") s
/F-gs-font 8 8 SF
5 66 M
(        @) s
/Courier-Bold 8 8 SUF
48.2 66 M
(echo) s
/F-gs-font 8 8 SF
5 57 M
(        @) s
/Courier-Bold 8 8 SUF
48.2 57 M
(echo) s
/F-gs-font 8 8 SF
67.4 57 M
( ) s
/Courier-Bold 8 8 SUF
72.2 57 M
("Available targets are:") s
/F-gs-font 8 8 SF
5 48 M
(        @) s
/Courier-Bold 8 8 SUF
48.2 48 M
(echo) s
/F-gs-font 8 8 SF
67.4 48 M
( ) s
/Courier-Bold 8 8 SUF
72.2 48 M
("  pdf                 Generate selected files in pdf and copy into ./docs") s
/F-gs-font 8 8 SF
5 39 M
(        @) s
/Courier-Bold 8 8 SUF
48.2 39 M
(echo) s
/F-gs-font 8 8 SF
67.4 39 M
( ) s
/Courier-Bold 8 8 SUF
72.2 39 M
("  allpdf              Generate selected files in pdf and copy into vmware hgfs") s
/F-gs-font 8 8 SF
5 30 M
(        @) s
/Courier-Bold 8 8 SUF
48.2 30 M
(echo) s
/F-gs-font 8 8 SF
67.4 30 M
( ) s
/Courier-Bold 8 8 SUF
72.2 30 M
("  test                   build and test run") s
/F-gs-font 8 8 SF
5 21 M
(        @) s
/Courier-Bold 8 8 SUF
48.2 21 M
(echo) s
/F-gs-font 8 8 SF
67.4 21 M
( ) s
/Courier-Bold 8 8 SUF
72.2 21 M
("  format                 run cargo fmt to format the rust code") s
/F-gs-font 8 8 SF
5 12 M
(        @) s
/Courier-Bold 8 8 SUF
48.2 12 M
(echo) s
/F-gs-font 8 8 SF
67.4 12 M
( ) s
/Courier-Bold 8 8 SUF
72.2 12 M
("  build                  call up cargo build") s
/F-gs-font 8 8 SF
5 3 M
(        @) s
/Courier-Bold 8 8 SUF
48.2 3 M
(echo) s
/F-gs-font 8 8 SF
67.4 3 M
( ) s
/Courier-Bold 8 8 SUF
72.2 3 M
("  examples               build all test programs in examples dir") s
/F-gs-font 8 8 SF
_R
S
%%Page: (3) 3
%%BeginPageSetup
_S
24 24 translate
/pagenum 3 def
/fname (Makefile) def
/fdir (.) def
/ftail (Makefile) def
% User defined strings:
/fmodstr (Sun Feb 04 09:54:48 2024) def
/pagenumstr (3) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
1 9.000000 2 8.000000 highlight_bars
do_header
5 768 M
(        @) s
/Courier-Bold 8 8 SUF
48.2 768 M
(echo) s
/F-gs-font 8 8 SF
67.4 768 M
( ) s
/Courier-Bold 8 8 SUF
72.2 768 M
("  install                install the binary in --path .") s
/F-gs-font 8 8 SF
5 759 M
(        @) s
/Courier-Bold 8 8 SUF
48.2 759 M
(echo) s
/F-gs-font 8 8 SF
67.4 759 M
( ) s
/Courier-Bold 8 8 SUF
72.2 759 M
("  help                   Showing this help ") s
/F-gs-font 8 8 SF
5 750 M
(        @) s
/Courier-Bold 8 8 SUF
48.2 750 M
(echo) s
/F-gs-font 8 8 SF
67.4 750 M
( ) s
/Courier-Bold 8 8 SUF
72.2 750 M
("  clean                  clean all artifact files") s
/F-gs-font 8 8 SF
5 741 M
(        @) s
/Courier-Bold 8 8 SUF
48.2 741 M
(echo) s
/F-gs-font 8 8 SF
67.4 741 M
( ) s
/Courier-Bold 8 8 SUF
72.2 741 M
("  commit {") s
/F-gs-font 8 8 SF
129.8 741 M
(my message) s
/Courier-Bold 8 8 SUF
177.8 741 M
("}  ie, git commit and push with defalut message") s
/F-gs-font 8 8 SF
5 732 M
(        @) s
/Courier-Bold 8 8 SUF
48.2 732 M
(echo) s
/F-gs-font 8 8 SF
67.4 732 M
( ) s
/Courier-Bold 8 8 SUF
72.2 732 M
("  status                 ie, git status") s
/F-gs-font 8 8 SF
5 723 M
(        @) s
/Courier-Bold 8 8 SUF
48.2 723 M
(echo) s
/F-gs-font 8 8 SF
67.4 723 M
( ) s
/Courier-Bold 8 8 SUF
72.2 723 M
("  pull                   ie, git pull") s
/F-gs-font 8 8 SF
5 714 M
(        @) s
/Courier-Bold 8 8 SUF
48.2 714 M
(echo) s
/F-gs-font 8 8 SF
67.4 714 M
( ) s
/Courier-Bold 8 8 SUF
72.2 714 M
("") s
/F-gs-font 8 8 SF
_R
S
%%Trailer
%%Pages: 3
%%DocumentNeededResources: font Courier-Oblique Courier-Bold Courier 
%%EOF
